# work out the shark's body temperature
sharktemp=calc.bodytemp(watertemp,mass) #just for simplifying parameters
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
Ans = tss_probforage_energygain_optimize_linear(V, U, alpha, C, L, my, phi, omega, beta, h, mb,mx)
no[x,y] = allpeak_no.sim_result(Ans,0.0)
#	plot.sim_result(Ans,"")
}
}
mode = allpeak_no.mode(no)
allpeak_no.image(x.ax,y.ax,mode,xlab="mass",ylab="phi")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
#image(x.ax,y.ax,mode,zlim=c(0,15),col=mode.colors())
#=== plot with changing mass (sharkradius) and phi ===
omega = 1.0
beta = 1.0
phi = 0.1
h = 0.1
# work out the shark's body temperature
#    mass is kind of the size of shark (like sharkradius)
#    I used this just for simplifying parameters
mass = 10
sharktemp=calc.bodytemp(watertemp,mass)
#bodytemp=calc.shark.temp(tnum,watertemp,sharkradius,skinthickness)
# prey immediately track temperature
utemp = 0.1 #influence of bodytemp
U = uave + utemp*(watertemp-(tmax+tmin)/2)
# sharks track their own temperature
vave = 1.2 #average swim speed (prey is always 1.0)
vtemp = 0.1 #influence of bodytemp
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
# calc light effect, or predation efficiency
#    e.g., in muddy (inclear) water this value will increase?
lmin = 1
lmax = 1
L = calc.light_effect(t,lmin,lmax)
#plot.assumption(t,watertemp,sharktemp, V,U,L)
grid = 51
no = matrix(0,grid,grid)
x.ax = seq(0,2,length=grid)
y.ax = seq(0,2,length=grid)
mx = 1.0
my = 1.0
for(y in 1:length(y.ax)){
for(x in 1:length(x.ax)){
mx = x.ax[x]
my = y.ax[y]
Ans = tss_probforage_energygain_optimize_linear(V, U, alpha, C, L, my, phi, omega, beta, h, mb,mx)
no[x,y] = allpeak_no.sim_result(Ans,0.0)
#	plot.sim_result(Ans,"")
}
}
mode = allpeak_no.mode(no)
allpeak_no.image(x.ax,y.ax,mode,xlab="mass",ylab="phi")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
t with changing mass (sharkradius) and phi ===
omega = 1.0
beta = 1.0
phi = 0.0
h = 0.1
# work out the shark's body temperature
#    mass is kind of the size of shark (like sharkradius)
#    I used this just for simplifying parameters
mass = 10
sharktemp=calc.bodytemp(watertemp,mass)
#bodytemp=calc.shark.temp(tnum,watertemp,sharkradius,skinthickness)
# prey immediately track temperature
utemp = 0.1 #influence of bodytemp
U = uave + utemp*(watertemp-(tmax+tmin)/2)
# sharks track their own temperature
vave = 1.2 #average swim speed (prey is always 1.0)
vtemp = 0.1 #influence of bodytemp
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
# calc light effect, or predation efficiency
#    e.g., in muddy (inclear) water this value will increase?
lmin = 1
lmax = 1
L = calc.light_effect(t,lmin,lmax)
#plot.assumption(t,watertemp,sharktemp, V,U,L)
grid = 51
no = matrix(0,grid,grid)
x.ax = seq(0,2,length=grid)
y.ax = seq(0,2,length=grid)
mx = 1.0
my = 1.0
for(y in 1:length(y.ax)){
for(x in 1:length(x.ax)){
mx = x.ax[x]
my = y.ax[y]
Ans = tss_probforage_energygain_optimize_linear(V, U, alpha, C, L, my, phi, omega, beta, h, mb,mx)
no[x,y] = allpeak_no.sim_result(Ans,0.0)
#	plot.sim_result(Ans,"")
}
}
mode = allpeak_no.mode(no)
allpeak_no.image(x.ax,y.ax,mode,xlab="mass",ylab="phi")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
#image(x.ax,y.ax,mode,zlim=c(0,15),col=mode.colors())
#=== plot with changing mass (sharkradius) and phi ===
omega = 0.0
beta = 1.0
phi = 0.1
h = 0.1
# work out the shark's body temperature
#    mass is kind of the size of shark (like sharkradius)
#    I used this just for simplifying parameters
mass = 10
sharktemp=calc.bodytemp(watertemp,mass)
#bodytemp=calc.shark.temp(tnum,watertemp,sharkradius,skinthickness)
# prey immediately track temperature
utemp = 0.1 #influence of bodytemp
U = uave + utemp*(watertemp-(tmax+tmin)/2)
# sharks track their own temperature
vave = 1.2 #average swim speed (prey is always 1.0)
vtemp = 0.1 #influence of bodytemp
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
# calc light effect, or predation efficiency
#    e.g., in muddy (inclear) water this value will increase?
lmin = 1
lmax = 1
L = calc.light_effect(t,lmin,lmax)
#plot.assumption(t,watertemp,sharktemp, V,U,L)
grid = 51
no = matrix(0,grid,grid)
x.ax = seq(0,2,length=grid)
y.ax = seq(0,2,length=grid)
mx = 1.0
my = 1.0
for(y in 1:length(y.ax)){
for(x in 1:length(x.ax)){
mx = x.ax[x]
my = y.ax[y]
Ans = tss_probforage_energygain_optimize_linear(V, U, alpha, C, L, my, phi, omega, beta, h, mb,mx)
no[x,y] = allpeak_no.sim_result(Ans,0.0)
#	plot.sim_result(Ans,"")
}
}
mode = allpeak_no.mode(no)
allpeak_no.image(x.ax,y.ax,mode,xlab="mass",ylab="phi")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
#image(x.ax,y.ax,mode,zlim=c(0,15),col=mode.colors())
#=== plot with changing mass (sharkradius) and phi ===
omega = 1.0
beta = 1.0
phi = 0.1
h = 0.1
# work out the shark's body temperature
#    mass is kind of the size of shark (like sharkradius)
#    I used this just for simplifying parameters
mass = 10
sharktemp=calc.bodytemp(watertemp,mass)
#bodytemp=calc.shark.temp(tnum,watertemp,sharkradius,skinthickness)
# prey immediately track temperature
utemp = 0.1 #influence of bodytemp
U = uave + utemp*(watertemp-(tmax+tmin)/2)
# sharks track their own temperature
vave = 1.2 #average swim speed (prey is always 1.0)
vtemp = 0.1 #influence of bodytemp
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
# calc light effect, or predation efficiency
#    e.g., in muddy (inclear) water this value will increase?
lmin = 1
lmax = 1
L = calc.light_effect(t,lmin,lmax)
#plot.assumption(t,watertemp,sharktemp, V,U,L)
grid = 51
no = matrix(0,grid,grid)
x.ax = seq(0,2,length=grid)
y.ax = seq(0,2,length=grid)
mx = 1.0
my = 1.0
for(y in 1:length(y.ax)){
for(x in 1:length(x.ax)){
mx = x.ax[x]
my = y.ax[y]
Ans = tss_probforage_energygain_optimize_linear(V, U, alpha, C, L, my, phi, omega, beta, h, mb,mx)
no[x,y] = allpeak_no.sim_result(Ans,0.0)
#	plot.sim_result(Ans,"")
}
}
mode = allpeak_no.mode(no)
allpeak_no.image(x.ax,y.ax,mode,xlab="mx",ylab="my")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
#=== plot with changing mass (sharkradius) and phi ===
omega = 1.0
beta = 1.0
phi = 0.1
h = 0.1
# work out the shark's body temperature
#    mass is kind of the size of shark (like sharkradius)
#    I used this just for simplifying parameters
mass = 10
sharktemp=calc.bodytemp(watertemp,mass)
#bodytemp=calc.shark.temp(tnum,watertemp,sharkradius,skinthickness)
# prey immediately track temperature
utemp = 0.1 #influence of bodytemp
U = uave + utemp*(watertemp-(tmax+tmin)/2)
# sharks track their own temperature
vave = 1.2 #average swim speed (prey is always 1.0)
vtemp = 0.1 #influence of bodytemp
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
# calc light effect, or predation efficiency
#    e.g., in muddy (inclear) water this value will increase?
lmin = 1
lmax = 1
L = calc.light_effect(t,lmin,lmax)
#plot.assumption(t,watertemp,sharktemp, V,U,L)
grid = 51
no = matrix(0,grid,grid)
x.ax = seq(0,2,length=grid)
y.ax = seq(0,2,length=grid)
mx = 1.0
my = 1.0
for(y in 1:length(y.ax)){
for(x in 1:length(x.ax)){
beta  = x.ax[x]
omega = y.ax[y]
Ans = tss_probforage_energygain_optimize_linear(V, U, alpha, C, L, my, phi, omega, beta, h, mb,mx)
no[x,y] = allpeak_no.sim_result(Ans,0.0)
#	plot.sim_result(Ans,"")
}
}
mode = allpeak_no.mode(no)
allpeak_no.image(x.ax,y.ax,mode,xlab="mx",ylab="my")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
mx = 0.5
my = 0.5
for(y in 1:length(y.ax)){
for(x in 1:length(x.ax)){
beta  = x.ax[x]
omega = y.ax[y]
Ans = tss_probforage_energygain_optimize_linear(V, U, alpha, C, L, my, phi, omega, beta, h, mb,mx)
no[x,y] = allpeak_no.sim_result(Ans,0.0)
#	plot.sim_result(Ans,"")
}
}
mode = allpeak_no.mode(no)
allpeak_no.image(x.ax,y.ax,mode,xlab="mx",ylab="my")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
#=== plot with changing mass (sharkradius) and phi ===
omega = 1.0
beta = 1.0
phi = 0.1
h = 0.1
# work out the shark's body temperature
#    mass is kind of the size of shark (like sharkradius)
#    I used this just for simplifying parameters
mass = 10
sharktemp=calc.bodytemp(watertemp,mass)
#bodytemp=calc.shark.temp(tnum,watertemp,sharkradius,skinthickness)
# prey immediately track temperature
utemp = 0.1 #influence of bodytemp
U = uave + utemp*(watertemp-(tmax+tmin)/2)
# sharks track their own temperature
vave = 1.2 #average swim speed (prey is always 1.0)
vtemp = 0.1 #influence of bodytemp
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
# calc light effect, or predation efficiency
#    e.g., in muddy (inclear) water this value will increase?
lmin = 1
lmax = 1
L = calc.light_effect(t,lmin,lmax)
#plot.assumption(t,watertemp,sharktemp, V,U,L)
grid = 51
no = matrix(0,grid,grid)
x.ax = seq(1,15,length=grid)
y.ax = seq(0,0.4,length=grid)
mx = 0.5
my = 0.5
for(y in 1:length(y.ax)){
for(x in 1:length(x.ax)){
mass = x.ax[x]
phi = y.ax[y]
# work out the shark's body temperature
sharktemp=calc.bodytemp(watertemp,mass) #just for simplifying parameters
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
Ans = tss_probforage_energygain_optimize_linear(V, U, alpha, C, L, my, phi, omega, beta, h, mb,mx)
no[x,y] = allpeak_no.sim_result(Ans,0.0)
#	plot.sim_result(Ans,"")
}
}
mode = allpeak_no.mode(no)
allpeak_no.image(x.ax,y.ax,mode,xlab="mass",ylab="phi")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
#image(x.ax,y.ax,mode,zlim=c(0,15),col=mode.colors())
unique(no[mode$main==0])
allpeak_no.image(x.ax,y.ax,mode,xlab="beta",ylab="omega")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
#=== plot with changing mass (sharkradius) and phi ===
omega = 1.0
beta = 1.0
phi = 0.1
h = 0.1
# work out the shark's body temperature
#    mass is kind of the size of shark (like sharkradius)
#    I used this just for simplifying parameters
mass = 10
sharktemp=calc.bodytemp(watertemp,mass)
#bodytemp=calc.shark.temp(tnum,watertemp,sharkradius,skinthickness)
# prey immediately track temperature
utemp = 0.1 #influence of bodytemp
U = uave + utemp*(watertemp-(tmax+tmin)/2)
# sharks track their own temperature
vave = 1.2 #average swim speed (prey is always 1.0)
vtemp = 0.1 #influence of bodytemp
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
# calc light effect, or predation efficiency
#    e.g., in muddy (inclear) water this value will increase?
lmin = 1
lmax = 1
L = calc.light_effect(t,lmin,lmax)
#plot.assumption(t,watertemp,sharktemp, V,U,L)
grid = 51
no = matrix(0,grid,grid)
x.ax = seq(0,2,length=grid)
y.ax = seq(0,2,length=grid)
mx = 0.5
my = 0.5
for(y in 1:length(y.ax)){
for(x in 1:length(x.ax)){
beta  = x.ax[x]
omega = y.ax[y]
Ans = tss_probforage_energygain_optimize_linear(V, U, alpha, C, L, my, phi, omega, beta, h, mb,mx)
no[x,y] = allpeak_no.sim_result(Ans,0.0)
#	plot.sim_result(Ans,"")
}
}
mode = allpeak_no.mode(no)
allpeak_no.image(x.ax,y.ax,mode,xlab="beta",ylab="omega")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
unique(no[mode$main==0])
#=== plot with changing mass (sharkradius) and phi ===
omega = 0.0
beta = 1.0
phi = 0.1
h = 0.1
# work out the shark's body temperature
#    mass is kind of the size of shark (like sharkradius)
#    I used this just for simplifying parameters
mass = 10
sharktemp=calc.bodytemp(watertemp,mass)
#bodytemp=calc.shark.temp(tnum,watertemp,sharkradius,skinthickness)
# prey immediately track temperature
utemp = 0.1 #influence of bodytemp
U = uave + utemp*(watertemp-(tmax+tmin)/2)
# sharks track their own temperature
vave = 1.2 #average swim speed (prey is always 1.0)
vtemp = 0.1 #influence of bodytemp
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
# calc light effect, or predation efficiency
#    e.g., in muddy (inclear) water this value will increase?
lmin = 1
lmax = 1
L = calc.light_effect(t,lmin,lmax)
#plot.assumption(t,watertemp,sharktemp, V,U,L)
grid = 51
no = matrix(0,grid,grid)
x.ax = seq(1,15,length=grid)
y.ax = seq(0,0.4,length=grid)
mx = 0.5
my = 0.5
for(y in 1:length(y.ax)){
for(x in 1:length(x.ax)){
mass = x.ax[x]
phi = y.ax[y]
# work out the shark's body temperature
sharktemp=calc.bodytemp(watertemp,mass) #just for simplifying parameters
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
Ans = tss_probforage_energygain_optimize_linear(V, U, alpha, C, L, my, phi, omega, beta, h, mb,mx)
no[x,y] = allpeak_no.sim_result(Ans,0.0)
#	plot.sim_result(Ans,"")
}
}
mode = allpeak_no.mode(no)
allpeak_no.image(x.ax,y.ax,mode,xlab="mass",ylab="phi")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
#image(x.ax,y.ax,mode,zlim=c(0,15),col=mode.colors())
#=== plot with changing mass (sharkradius) and phi ===
omega = 1.0
beta = 1.2
phi = 0.1
h = 0.1
# work out the shark's body temperature
#    mass is kind of the size of shark (like sharkradius)
#    I used this just for simplifying parameters
mass = 10
sharktemp=calc.bodytemp(watertemp,mass)
#bodytemp=calc.shark.temp(tnum,watertemp,sharkradius,skinthickness)
# prey immediately track temperature
utemp = 0.1 #influence of bodytemp
U = uave + utemp*(watertemp-(tmax+tmin)/2)
# sharks track their own temperature
vave = 1.2 #average swim speed (prey is always 1.0)
vtemp = 0.1 #influence of bodytemp
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
# calc light effect, or predation efficiency
#    e.g., in muddy (inclear) water this value will increase?
lmin = 1
lmax = 1
L = calc.light_effect(t,lmin,lmax)
#plot.assumption(t,watertemp,sharktemp, V,U,L)
grid = 51
no = matrix(0,grid,grid)
x.ax = seq(1,15,length=grid)
y.ax = seq(0,0.4,length=grid)
mx = 0.5
my = 0.5
for(y in 1:length(y.ax)){
for(x in 1:length(x.ax)){
mass = x.ax[x]
phi = y.ax[y]
# work out the shark's body temperature
sharktemp=calc.bodytemp(watertemp,mass) #just for simplifying parameters
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
Ans = tss_probforage_energygain_optimize_linear(V, U, alpha, C, L, my, phi, omega, beta, h, mb,mx)
no[x,y] = allpeak_no.sim_result(Ans,0.0)
#	plot.sim_result(Ans,"")
}
}
mode = allpeak_no.mode(no)
allpeak_no.image(x.ax,y.ax,mode,xlab="mass",ylab="phi")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
#image(x.ax,y.ax,mode,zlim=c(0,15),col=mode.colors())
grid = 51
no = matrix(0,grid,grid)
x.ax = seq(1,25,length=grid)
y.ax = seq(0,0.4,length=grid)
mx = 0.5
my = 0.5
for(y in 1:length(y.ax)){
for(x in 1:length(x.ax)){
mass = x.ax[x]
phi = y.ax[y]
# work out the shark's body temperature
sharktemp=calc.bodytemp(watertemp,mass) #just for simplifying parameters
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
Ans = tss_probforage_energygain_optimize_linear(V, U, alpha, C, L, my, phi, omega, beta, h, mb,mx)
no[x,y] = allpeak_no.sim_result(Ans,0.0)
#	plot.sim_result(Ans,"")
}
}
mode = allpeak_no.mode(no)
allpeak_no.image(x.ax,y.ax,mode,xlab="mass",ylab="phi")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
#image(x.ax,y.ax,mode,zlim=c(0,15),col=mode.colors())
grid = 51
no = matrix(0,grid,grid)
x.ax = seq(1,20,length=grid)
y.ax = seq(0,0.4,length=grid)
mx = 0.5
my = 0.5
for(y in 1:length(y.ax)){
for(x in 1:length(x.ax)){
mass = x.ax[x]
phi = y.ax[y]
# work out the shark's body temperature
sharktemp=calc.bodytemp(watertemp,mass) #just for simplifying parameters
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
Ans = tss_probforage_energygain_optimize_linear(V, U, alpha, C, L, my, phi, omega, beta, h, mb,mx)
no[x,y] = allpeak_no.sim_result(Ans,0.0)
#	plot.sim_result(Ans,"")
}
}
mode = allpeak_no.mode(no)
allpeak_no.image(x.ax,y.ax,mode,xlab="mass",ylab="phi")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
#image(x.ax,y.ax,mode,zlim=c(0,15),col=mode.colors())
#=== plot with changing mass (sharkradius) and phi ===
omega = 0.0
beta = 0.25
phi = 0.1
h = 0.1
# work out the shark's body temperature
#    mass is kind of the size of shark (like sharkradius)
#    I used this just for simplifying parameters
mass = 10
sharktemp=calc.bodytemp(watertemp,mass)
#bodytemp=calc.shark.temp(tnum,watertemp,sharkradius,skinthickness)
# prey immediately track temperature
utemp = 0.1 #influence of bodytemp
U = uave + utemp*(watertemp-(tmax+tmin)/2)
# sharks track their own temperature
vave = 1.2 #average swim speed (prey is always 1.0)
vtemp = 0.1 #influence of bodytemp
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
# calc light effect, or predation efficiency
#    e.g., in muddy (inclear) water this value will increase?
lmin = 1
lmax = 1
L = calc.light_effect(t,lmin,lmax)
#plot.assumption(t,watertemp,sharktemp, V,U,L)
grid = 51
no = matrix(0,grid,grid)
x.ax = seq(1,20,length=grid)
y.ax = seq(0,0.4,length=grid)
mx = 0.5
my = 0.5
for(y in 1:length(y.ax)){
for(x in 1:length(x.ax)){
mass = x.ax[x]
phi = y.ax[y]
# work out the shark's body temperature
sharktemp=calc.bodytemp(watertemp,mass) #just for simplifying parameters
V = vave + vtemp*(sharktemp-(tmax+tmin)/2)
Ans = tss_probforage_energygain_optimize_linear(V, U, alpha, C, L, my, phi, omega, beta, h, mb,mx)
no[x,y] = allpeak_no.sim_result(Ans,0.0)
#	plot.sim_result(Ans,"")
}
}
mode = allpeak_no.mode(no)
allpeak_no.image(x.ax,y.ax,mode,xlab="mass",ylab="phi")
allpeak_no.point(x.ax,y.ax,mode,cex=0.5)
#image(x.ax,y.ax,mode,zlim=c(0,15),col=mode.colors())
