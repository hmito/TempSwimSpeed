V = vmin + (vmax - vmin)*(cos(2*pi*(t-vmaxt)/tnum)+1)/2
U = umin + (umax - umin)*(cos(2*pi*(t-umaxt)/tnum)+1)/2
# find solution
Ans = tss_probforage_energygain_optimize(V, U, K, C, L, d, e, b, h,cb,cf)
#find_peaks function return the table of the peaks
#	Each row of the table shows infomation of each peak
#		Therefore, nrow (number of row) is the number of peaks
#	"lower" col and "upper" cik show the lower and upper value (in this case, time) of the focal peak
#		Therefore, upper-lower is the width of each peak
#	"top" and "freq" cols will be useless in this model
#		top is the maximum point (time) of the peak
#		freq is the total value inside of the peak
PredatorPeaks = hist.find_peaks(Ans$Predator,0.00,0.05)
#Mode
#	-1 "black": unknown
#	 0 "grey": No predation
#	 1 "blue":	afternoon
#	 2 "cyan": afternoon-midnight(over 12)
#	 3 "green":	beforenoon-midnight (rest only morning)
#	 4 "orange": afternoon with short rest on everning
#	 5 "yellow": afternoon-midnight(over 12) with short rest on everning
#	 6 "red": afternoon-midnight(over 12) with short rest on morning
Mode=-1
if(nrow(PredatorPeaks)==0){
Mode = 0
}else if(nrow(PredatorPeaks)==1){
if(12 < PredatorPeaks$lower[1] && PredatorPeaks$upper[1] <= 24){
Mode = 1
}
}else if(nrow(PredatorPeaks)==2){
if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
12 < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] == 24){
Mode = 2
}else if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
PredatorPeaks$upper[1] < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] == 24){
Mode = 3
}else if(12 < PredatorPeaks$lower[1] && PredatorPeaks$upper[1] < 24 &&
PredatorPeaks$upper[1] < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] <= 24){
Mode = 4
}
}else if(nrow(PredatorPeaks)==3){
if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
12 < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] < 24&&
PredatorPeaks$upper[2] < PredatorPeaks$lower[3] && PredatorPeaks$upper[3] == 24){
Mode = 5
}else if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
PredatorPeaks$upper[1] < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] < 12&&
12 < PredatorPeaks$lower[3] && PredatorPeaks$upper[3] == 24){
Mode = 6
}
}
PredatorMode.mx[x.i,y.i] = Mode
}
}
image(x.seq,y.seq,PredatorMode.mx,zlim=c(-1,6),col=c("black","grey","blue","cyan","blue","orange","yellow","red"))
#=== analysis of peaks2 ===
#	Map of the predator-prey strategy plot.
#	output is png file with defined name
DotNum=10
x.seq = seq(0,0.5,length=DotNum)
y.seq = seq(0,1,length=DotNum)
PredatorMode.mx = matrix(0,DotNum,DotNum)
png("test.png",height=2500,width=2500)
par(oma=c(0.2,0.2,0.2,0.2),mfrow=c(DotNum,DotNum))
for (y.i in 1:length(y.seq)) {
for (x.i in 1:length(x.seq)) {
#set the parameter valus
# x: effect of lamp
# y: difference of vmax - umax, vmin-umin
lamp = x.seq[x.i]
vudif = y.seq[y.i]
#influence of light on the predation rate
L = lmean+lamp*(exp(-2.0*cos(2*pi*t/tnum))/exp(2.0)-0.5)
#influence of speed
umin = 0.5
umax = 2.0
umaxt = 15
vmin = umin + vudif
vmax = umax + vudif
vmaxt = 18
V = vmin + (vmax - vmin)*(cos(2*pi*(t-vmaxt)/tnum)+1)/2
U = umin + (umax - umin)*(cos(2*pi*(t-umaxt)/tnum)+1)/2
# find solution
Ans = tss_probforage_energygain_optimize(V, U, K, C, L, d, e, b, h,cb,cf)
#Summarized figure
Prey= Ans$Prey
Predator = Ans$Predator
plot(0,0,type="n",
xlab="time (t)",ylab="foraging predator (red), prey (blue)",
xlim=c(0,tnum),ylim=c(-0.02,1.02),
main=bquote(paste('l'['1']*'=',.(lamp),', b=', .(b),', e=', .(e))))  #  main=figlabs[i]
lines(t,Predator*0.98,col="red",lwd=3)
lines(t,Prey,col="blue",lwd=3)
}
}
dev.off()
vudif=0.0
vudif=0.2
lamp=0.0
#influence of speed
umin = 0.5
umax = 2.0
umaxt = 15
vmin = umin + vudif
vmax = umax + vudif
vmaxt = 18
V = vmin + (vmax - vmin)*(cos(2*pi*(t-vmaxt)/tnum)+1)/2
U = umin + (umax - umin)*(cos(2*pi*(t-umaxt)/tnum)+1)/2
# find solution
Ans = tss_probforage_energygain_optimize(V, U, K, C, L, d, e, b, h,cb,cf)
#Summarized figure
Prey= Ans$Prey
Predator = Ans$Predator
plot(0,0,type="n",
xlab="time (t)",ylab="foraging predator (red), prey (blue)",
xlim=c(0,tnum),ylim=c(-0.02,1.02),
main=bquote(paste('l'['1']*'=',.(lamp),', b=', .(b),', e=', .(e))))  #  main=figlabs[i]
lines(t,Predator*0.98,col="red",lwd=3)
lines(t,Prey,col="blue",lwd=3)
#=== analysis of peaks2 ===
#	Map of the predator-prey strategy plot.
#	output is png file with defined name
DotNum=10
x.seq = seq(0,0.5,length=DotNum)
y.seq = seq(0,1,length=DotNum)
PredatorMode.mx = matrix(0,DotNum,DotNum)
png("test.png",height=2500,width=2500)
par(oma=c(0.2,0.2,0.2,0.2),mfrow=c(DotNum,DotNum))
for (y.i in length(y.seq):1) {
for (x.i in 1:length(x.seq)) {
#set the parameter valus
# x: effect of lamp
# y: difference of vmax - umax, vmin-umin
lamp = x.seq[x.i]
vudif = y.seq[y.i]
#influence of light on the predation rate
L = lmean+lamp*(exp(-2.0*cos(2*pi*t/tnum))/exp(2.0)-0.5)
#influence of speed
umin = 0.5
umax = 2.0
umaxt = 15
vmin = umin + vudif
vmax = umax + vudif
vmaxt = 18
V = vmin + (vmax - vmin)*(cos(2*pi*(t-vmaxt)/tnum)+1)/2
U = umin + (umax - umin)*(cos(2*pi*(t-umaxt)/tnum)+1)/2
# find solution
Ans = tss_probforage_energygain_optimize(V, U, K, C, L, d, e, b, h,cb,cf)
#Summarized figure
Prey= Ans$Prey
Predator = Ans$Predator
plot(0,0,type="n",
xlab="time (t)",ylab="foraging predator (red), prey (blue)",
xlim=c(0,tnum),ylim=c(-0.02,1.02),
main=bquote(paste('l'['1']*'=',.(lamp),', b=', .(b),', e=', .(e))))  #  main=figlabs[i]
lines(t,Predator*0.98,col="red",lwd=3)
lines(t,Prey,col="blue",lwd=3)
}
}
dev.off()
vudif = 1.0
lamp=0.0
#influence of light on the predation rate
L = lmean+lamp*(exp(-2.0*cos(2*pi*t/tnum))/exp(2.0)-0.5)
#influence of speed
umin = 0.5
umax = 2.0
umaxt = 15
vmin = umin + vudif
vmax = umax + vudif
vmaxt = 18
V = vmin + (vmax - vmin)*(cos(2*pi*(t-vmaxt)/tnum)+1)/2
U = umin + (umax - umin)*(cos(2*pi*(t-umaxt)/tnum)+1)/2
# find solution
Ans = tss_probforage_energygain_optimize(V, U, K, C, L, d, e, b, h,cb,cf)
#Summarized figure
Prey= Ans$Prey
Predator = Ans$Predator
plot(0,0,type="n",
xlab="time (t)",ylab="foraging predator (red), prey (blue)",
xlim=c(0,tnum),ylim=c(-0.02,1.02),
main=bquote(paste('l'['1']*'=',.(lamp),', b=', .(b),', e=', .(e))))  #  main=figlabs[i]
lines(t,Predator*0.98,col="red",lwd=3)
lines(t,Prey,col="blue",lwd=3)
#find_peaks function return the table of the peaks
#	Each row of the table shows infomation of each peak
#		Therefore, nrow (number of row) is the number of peaks
#	"lower" col and "upper" cik show the lower and upper value (in this case, time) of the focal peak
#		Therefore, upper-lower is the width of each peak
#	"top" and "freq" cols will be useless in this model
#		top is the maximum point (time) of the peak
#		freq is the total value inside of the peak
PredatorPeaks = hist.find_peaks(Ans$Predator,0.00,0.05)
#Mode
#	-1 "black": unknown
#	 0 "grey": No predation
#	 1 "blue":	afternoon
#	 2 "cyan": afternoon-midnight(over 12)
#	 3 "green":	beforenoon-midnight (rest only morning)
#	 4 "orange": afternoon with short rest on everning
#	 5 "yellow": afternoon-midnight(over 12) with short rest on everning
#	 6 "red": afternoon-midnight(over 12) with short rest on morning
Mode=-1
if(nrow(PredatorPeaks)==0){
Mode = 0
}else if(nrow(PredatorPeaks)==1){
if(12 < PredatorPeaks$lower[1] && PredatorPeaks$upper[1] <= 24){
Mode = 1
}
}else if(nrow(PredatorPeaks)==2){
if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
12 < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] == 24){
Mode = 2
}else if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
PredatorPeaks$upper[1] < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] == 24){
Mode = 3
}else if(12 < PredatorPeaks$lower[1] && PredatorPeaks$upper[1] < 24 &&
PredatorPeaks$upper[1] < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] <= 24){
Mode = 4
}
}else if(nrow(PredatorPeaks)==3){
if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
12 < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] < 24&&
PredatorPeaks$upper[2] < PredatorPeaks$lower[3] && PredatorPeaks$upper[3] == 24){
Mode = 5
}else if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
PredatorPeaks$upper[1] < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] < 12&&
12 < PredatorPeaks$lower[3] && PredatorPeaks$upper[3] == 24){
Mode = 6
}
}
PredatorMode.mx[x.i,y.i] = Mode
Mode
image(x.seq,y.seq,PredatorMode.mx,zlim=c(-1,6),col=c("black","grey","blue","cyan","green","orange","yellow","red"))
#=== analysis of peaks3 ===
#	example of the analysis based on the pattern of the predator active time.
#	Two parameter (lamp and V-U) is changed in x-axis and y-axis.
DotNum=41
x.seq = seq(0,0.5,length=DotNum)
y.seq = seq(0,1,length=DotNum)
PredatorMode.mx = matrix(0,DotNum,DotNum)
for (y.i in 1:length(y.seq)) {
for (x.i in 1:length(x.seq)) {
#set the parameter valus
# x: effect of lamp
# y: difference of vmax - umax, vmin-umin
lamp = x.seq[x.i]
vudif = y.seq[y.i]
#influence of light on the predation rate
L = lmean+lamp*(exp(-2.0*cos(2*pi*t/tnum))/exp(2.0)-0.5)
#influence of speed
umin = 0.5
umax = 2.0
umaxt = 15
vmin = umin + vudif
vmax = umax + vudif
vmaxt = 18
V = vmin + (vmax - vmin)*(cos(2*pi*(t-vmaxt)/tnum)+1)/2
U = umin + (umax - umin)*(cos(2*pi*(t-umaxt)/tnum)+1)/2
# find solution
Ans = tss_probforage_energygain_optimize(V, U, K, C, L, d, e, b, h,cb,cf)
#find_peaks function return the table of the peaks
#	Each row of the table shows infomation of each peak
#		Therefore, nrow (number of row) is the number of peaks
#	"lower" col and "upper" cik show the lower and upper value (in this case, time) of the focal peak
#		Therefore, upper-lower is the width of each peak
#	"top" and "freq" cols will be useless in this model
#		top is the maximum point (time) of the peak
#		freq is the total value inside of the peak
PredatorPeaks = hist.find_peaks(Ans$Predator,0.00,0.05)
#Mode
#	-1 "black": unknown
#	 0 "grey": No predation
#	 1 "blue":	afternoon
#	 2 "cyan": afternoon-midnight(over 12)
#	 3 "green":	beforenoon-midnight (rest only morning)
#	 4 "orange": afternoon with short rest on everning
#	 5 "yellow": afternoon-midnight(over 12) with short rest on everning
#	 6 "red": afternoon-midnight(over 12) with short rest on morning
Mode=-1
if(nrow(PredatorPeaks)==0){
Mode = 0
}else if(nrow(PredatorPeaks)==1){
if(12 < PredatorPeaks$lower[1] && PredatorPeaks$upper[1] <= 24){
Mode = 1
}
}else if(nrow(PredatorPeaks)==2){
if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
12 < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] == 24){
Mode = 2
}else if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
PredatorPeaks$upper[1] < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] == 24){
Mode = 3
}else if(12 < PredatorPeaks$lower[1] && PredatorPeaks$upper[1] < 24 &&
PredatorPeaks$upper[1] < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] <= 24){
Mode = 4
}
}else if(nrow(PredatorPeaks)==3){
if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
12 < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] < 24&&
PredatorPeaks$upper[2] < PredatorPeaks$lower[3] && PredatorPeaks$upper[3] == 24){
Mode = 5
}else if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
PredatorPeaks$upper[1] < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] < 12&&
12 < PredatorPeaks$lower[3] && PredatorPeaks$upper[3] == 24){
Mode = 6
}
}
PredatorMode.mx[x.i,y.i] = Mode
}
}
image(x.seq,y.seq,PredatorMode.mx,zlim=c(-1,6),col=c("black","grey","blue","cyan","green","orange","yellow","red"))
#=== analysis of peaks3 ===
#	example of the analysis based on the pattern of the predator active time.
#	Two parameter (lamp and V-U) is changed in x-axis and y-axis.
DotNum=41
x.seq = seq(0,0.5,length=DotNum)
y.seq = seq(0,1,length=DotNum)
PredatorMode.mx = matrix(0,DotNum,DotNum)
for (y.i in 1:length(y.seq)) {
for (x.i in 1:length(x.seq)) {
#set the parameter valus
# x: effect of lamp
# y: difference of vmax - umax, vmin-umin
lamp = x.seq[x.i]
vudif = y.seq[y.i]
#influence of light on the predation rate
L = lmean+lamp*(exp(-2.0*cos(2*pi*t/tnum))/exp(2.0)-0.5)
#influence of speed
umin = 0.5
umax = 2.0
umaxt = 15
vmin = umin + vudif
vmax = umax + vudif
vmaxt = 18
V = vmin + (vmax - vmin)*(cos(2*pi*(t-vmaxt)/tnum)+1)/2
U = umin + (umax - umin)*(cos(2*pi*(t-umaxt)/tnum)+1)/2
# find solution
Ans = tss_probforage_energygain_optimize(V, U, K, C, L, d, e, b, h,cb,cf)
#find_peaks function return the table of the peaks
#	Each row of the table shows infomation of each peak
#		Therefore, nrow (number of row) is the number of peaks
#	"lower" col and "upper" cik show the lower and upper value (in this case, time) of the focal peak
#		Therefore, upper-lower is the width of each peak
#	"top" and "freq" cols will be useless in this model
#		top is the maximum point (time) of the peak
#		freq is the total value inside of the peak
PredatorPeaks = hist.find_peaks(Ans$Predator,0.00,0.05)
#Mode
#	-1 "black": unknown
#	 0 "grey": No predation
#	 1 "blue":	afternoon
#	 2 "cyan": afternoon-midnight(over 12)
#	 3 "green":	beforenoon-midnight (rest only morning)
#	 4 "orange": afternoon with short rest on everning
#	 5 "yellow": afternoon-midnight(over 12) with short rest on everning
#	 6 "red": afternoon-midnight(over 12) with short rest on morning
Mode=-1
if(nrow(PredatorPeaks)==0){
Mode = 0
}else if(nrow(PredatorPeaks)==1){
if(12 < PredatorPeaks$lower[1] && PredatorPeaks$upper[1] <= 24){
#predation is start after 0 pm and finish before 0am
Mode = 1
}
}else if(nrow(PredatorPeaks)==2){
if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
12 < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] == 24){
#predation is start after 0pm and finish between [0pm : 9am].
Mode = 2
}else if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
PredatorPeaks$upper[1] < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] == 24){
#predation is start beforenoon[9am:0pm], and finish before 9 am
Mode = 3
}else if(12 < PredatorPeaks$lower[1] && PredatorPeaks$upper[1] < 24 &&
PredatorPeaks$upper[1] < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] <= 24){
#predation is start after 0pm, and finish before 0am with short rest.
Mode = 4
}
}else if(nrow(PredatorPeaks)==3){
if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
12 < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] < 24&&
PredatorPeaks$upper[2] < PredatorPeaks$lower[3] && PredatorPeaks$upper[3] == 24){
#predation is start after 0pm, and finish between [0pm : 9am]. short rest at between [0pm : 0am].
Mode = 5
}else if(PredatorPeaks$lower[1]==1 && PredatorPeaks$upper[1] < 9 &&
PredatorPeaks$upper[1] < PredatorPeaks$lower[2] && PredatorPeaks$upper[2] < 9&&
12 < PredatorPeaks$lower[3] && PredatorPeaks$upper[3] == 24){
#predation is start after 0pm, and finish between [0pm : 9am]. short rest at between [0pm : 9am].
Mode = 6
}
}
PredatorMode.mx[x.i,y.i] = Mode
}
}
image(x.seq,y.seq,PredatorMode.mx,zlim=c(-1,6),col=c("black","grey","blue","cyan","green","orange","yellow","red"))
# 2x2x2 comparison
library("Rcpp")
library("BH")
sourceCpp("TempSwimSpeedOptim.cpp")
#TempSwimSpeed_v1_02
#   Predator efficiency
library("Rcpp")
library("BH")
sourceCpp("TempSwimSpeedOptim.cpp")
tss_probforage_energygain_optimize
tss_probforage_energygain_optimize
#TempSwimSpeed_v1_03
#   Predator efficiency
library("Rcpp")
library("BH")
sourceCpp("TempSwimSpeedOptim.cpp")
pi = acos(-1)
tnum = 24
t = 0:23+0.5
vmin = 1.5
vmax = 2.5
vmaxt = 18
umin = 0.5
umax = 2.0
umaxt = 15
#Define the speed of predator (V) and prey (U) at each time step
V = vmin + (vmax - vmin)*(cos(2*pi*(t-vmaxt)/tnum)+1)/2
U = umin + (umax - umin)*(cos(2*pi*(t-umaxt)/tnum)+1)/2
K = rep(0.01, length=tnum)		#amount of food availability for prey
C = rep(0.02, length=tnum)		#metaboric cost for predators when they go out for predation
L = 0.2+0.8*exp(-2.0*cos(2*pi*t/tnum))/exp(2.0)	#influence of light on the predation rate
#following three parameters determine the prey traits
e = 0.0		#relative risk of predation for resting prey
d = 0.001		#relative density of predator/prey
#[NEW 18/07/16] influence of swim speed on foraging efficiency
omega = 0	#obtained reward is alpha*((1-omega)+omega*U)
#following two parameters determine the predation rate: a*(v-u)^b / {1 + h*a*(v-u)^b}
b = 3.0		#non-linear influence of speed difference
h = 2.0		#handling time for predation a prey
#following twp parameters determine the cost of prey
cb = 0.0001	#metabolic cost for prey (should pay both for resting and foraging)
cf	= 0.0001	#foraging cost for prey (should pay only for foraging)
#Variation of model
#if we set d=0, the prey decide their behaviour only based on the food availability for them regardless of the predation.
# d = 0.0
#
#if we set b=0, the swim speed (i.e., temperature) has no influence on the predation rate.
# b = 0.0
#
#if fix the V and U as constant values, the influence of temperature is ignored in this model.
# V=seq(1.5, length=tnum)
# U=seq(1.2, length=tnum)
#Optimization
#Because prey have discrete choice (f = 0, f* or 1 where f* is the threshold prey frequency for predators activity),
#there are two potential optimal behaviour of prey (before and after the peak of fitness)
#Return values include the following members
#	Prey		Optimal prey behaviour
#	PreyW		Fitness of prey
#	Predator	Optimal predator behaviour
#	PredatorW	Fitness of predator
#	ThresholdPreyFreq	The threshold prey frequency for predators activity f*
#	PreyReward	Reward of prey (independent from the strategy of prey/predators)
#	PreyCost0	Cost of prey caused by predation when f=0
#	PreyCostF	Cost of prey caused by predation when f=f*
#	PreyCost1	Cost of prey caused by predation f=1
Ans = tss_probforage_energygain_optimize(V, U, K, C, L, d, e, omega, b, h,cb,cf)
plot(0,0,type="n",xlim=c(0,tnum),ylim=c(0,max(c(vmax,umax))))
lines(t,Ans$Predator,col="red",lwd=3)
lines(t,Ans$Prey,col="blue",lwd=3)
points(t,V,col="red")
lines(t,V,col="red")
points(t,U,col="blue")
lines(t,U,col="blue")
points(t,L,col="black")
lines(t,L,col="black")
lines(t,C,col="red",lty=3)
lines(t,K,col="blue",lty=3)
#Optimal prey behaviour f
#	grey color is the difference of upper and lower optimal points.
barplot(rbind(Ans$Prey,Ans$Prey-Ans$Prey),xlab="time")
points(1:length(Ans$Prey)+0.5,Ans$ThresholdPreyFreq)
#Optimal predatpr behaviour p
#	grey color is the difference of upper and lower optimal points.
barplot(rbind(Ans$Predator),xlab="time")
#Mortality rate at each time step
#Mortality rate at each time step
plot(Ans$PreyCost1,type="b",pch=19,xlab="time",ylab= "predation risk", col="red")
lines(Ans$PreyCostF,type="b",pch=19,xlab="time",ylab= "predation risk", col="green")
lines(Ans$PreyCost0,type="b",pch=19,xlab="time",ylab= "predation risk")
lines(Ans$PreyReward,type="b",pch=19,xlab="time",ylab= "predation risk",col="blue")
#Mortality rate at each time step
plot(Ans$PreyCost,type="b",pch=19,xlab="time",ylab= "predation risk", col="red")
#lines(Ans$PreyCostF,type="b",pch=19,xlab="time",ylab= "predation risk", col="green")
#lines(Ans$PreyCost0,type="b",pch=19,xlab="time",ylab= "predation risk")
lines(Ans$PreyReward,type="b",pch=19,xlab="time",ylab= "predation risk",col="blue")
PreyReward
Ans$PreyReward
plot(Ans$PredatorReward,type="b",pch=19,xlab="time",ylab= "predation risk",col="blue")
lines(Ans$PredatorCost,type="b",pch=19,xlab="time",ylab= "predation risk",col="red")
#Mortality rate at each time step
plot(rep(1:length(Ans$PreyCost,times=2),c(Ans$PreyCost,Ans$PredatorCost),type="b",pch=19,xlab="time",ylab= "predation risk", col="red")
)
#Mortality rate at each time step
plot(rep(1:length(Ans$PreyCost,times=2)),c(Ans$PreyCost,Ans$PredatorCost),type="b",pch=19,xlab="time",ylab= "predation risk", col="red")
#Mortality rate at each time step
plot(rep(1:length(Ans$PreyCost),times=2),c(Ans$PreyCost,Ans$PredatorCost),type="b",pch=19,xlab="time",ylab= "predation risk", col="red")
#lines(Ans$PreyCostF,type="b",pch=19,xlab="time",ylab= "predation risk", col="green")
lines(Ans$PreyCost,type="b",pch=19,xlab="time",ylab= "predation risk",col="red")
lines(Ans$PreyReward,type="b",pch=19,xlab="time",ylab= "predation risk",col="blue")
plot(rep(1:length(Ans$PreyCost),times=2),c(Ans$PreyCost,Ans$PredatorCost),type="n",pch=19,xlab="time",ylab= "predation risk", col="red")
#lines(Ans$PreyCostF,type="b",pch=19,xlab="time",ylab= "predation risk", col="green")
lines(Ans$PreyCost,type="b",pch=19,xlab="time",ylab= "predation risk",col="red")
lines(Ans$PreyReward,type="b",pch=19,xlab="time",ylab= "predation risk",col="blue")
plot(rep(1:length(Ans$PredatorReward),times=2),c(Ans$PredatorReward,Ans$PredatorCost),type="n",pch=19,xlab="time",ylab= "predation risk", col="red")
lines(Ans$PredatorReward,type="b",pch=19,xlab="time",ylab= "predation risk",col="blue")
lines(Ans$PredatorCost,type="b",pch=19,xlab="time",ylab= "predation risk",col="red")
